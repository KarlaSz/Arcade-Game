# Frogger Game

#EN lang

Welcome to **Frogger Game**, a Python implementation of the classic arcade-style game, where your task is to help a frog cross a busy road while avoiding oncoming cars. Built with `pygame`, this project is perfect for learning basic game development concepts.

## Features
- **Smooth Gameplay**: Controlled frame rate at 30 FPS for a flicker-free experience.
- **Dynamic Obstacles**: Cars with random positions and directions that move across the screen.
- **Score Tracking**: Earn points each time the frog reaches the top of the screen.
- **Keyboard Controls**: Use arrow keys to navigate the frog.

## How to Play
1. **Move the Frog**:
   - `Arrow keys`: Move the frog up, down, left, or right.
2. **Avoid Cars**:
   - If the frog collides with a car, the game ends.
3. **Reach the Top**:
   - Successfully reach the top of the screen to score a point. The frog resets to the starting position.

## Requirements
- Python 3.x
- `pygame` library (install via `pip install pygame`)

## Installation
1. Clone this repository:
   ```bash
   git clone https://github.com/KarlaSz/Arcade-Game.git
   cd frogger-game





#PL lang

Ten projekt to prosta implementacja klasycznej gry zręcznościowej "Frogger" napisana w języku Python z wykorzystaniem biblioteki Pygame. Celem gry jest przeprowadzenie żaby na drugą stronę ekranu, unikając nadjeżdżających samochodów. Gra oferuje podstawową mechanikę rozgrywki, sterowanie za pomocą strzałek klawiatury oraz prosty system punktacji.

**Główne cechy:**

*   **Klasyczna rozgrywka:** Odtworzenie podstawowych założeń gry Frogger.
*   **Sterowanie strzałkami:** Intuicyjne przemieszczanie żaby za pomocą klawiszy strzałek.
*   **Kolizje:** Prosta detekcja kolizji z samochodami.
*   **Punktacja:** Zliczanie punktów za przejście żabą na drugą stronę.
*   **Ustalona liczba klatek na sekundę (FPS):** Stabilna płynność rozgrywki dzięki kontrolowanemu odświeżaniu ekranu.
*   **Losowe samochody:** Samochody poruszają się po wyznaczonych pasach z losowym kierunkiem i resetują się na krawędzi ekranu.

## Jak uruchomić grę

### Wymagania

*   Python 3.6 lub nowszy
*   Biblioteka Pygame (można zainstalować za pomocą `pip3 install pygame`)

### Kroki

1.  **Sklonuj repozytorium:**
    ```bash
    git clone https://github.com/KarlaSz/Arcade-Game.git
    ```
2.  **Przejdź do katalogu projektu:**
    ```bash
    cd nazwa-twojego-repozytorium
    ```
3.  **Uruchom grę:**
    ```bash
    python frogger.py
    ```

## Sterowanie

*   **Strzałka w lewo:** Przesuń żabę w lewo.
*   **Strzałka w prawo:** Przesuń żabę w prawo.
*   **Strzałka w górę:** Przesuń żabę do góry.
*   **Strzałka w dół:** Przesuń żabę w dół.

## Jak wnieść swój wkład

Jeśli chcesz wnieść swój wkład w rozwój tego projektu, oto jak możesz to zrobić:

1.  **Fork repozytorium:** Stwórz własną kopię (fork) repozytorium na swoim koncie GitHub.
2.  **Stwórz nową gałąź (branch):**
    ```bash
    git checkout -b nazwa-twojej-galezi
    ```
3.  **Wprowadź zmiany:** Napraw błędy, dodaj nowe funkcje.
4.  **Zatwierdź zmiany:**
    ```bash
    git add .
    git commit -m "Krótki opis twoich zmian"
    ```
5.  **Wypchnij zmiany:**
    ```bash
    git push origin nazwa-twojej-galezi
    ```
6.  **Stwórz Pull Request:** Na GitHubie stwórz "Pull Request" z twojej gałęzi do gałęzi `main` oryginalnego repozytorium.

## Przyszłe Ulepszenia

*   Dodanie różnych poziomów trudności.
*   Wprowadzenie animacji.
*   Dodanie dodatkowych przeszkód.
*   Dodanie lepszego interfejsu użytkownika.
*   Poprawa generowania samochodów i ich zachowania.

## Kontakt

Jeśli masz jakieś pytania lub sugestie, skontaktuj się ze mną pod adresem lub otwórz Issue w repozytorium.

